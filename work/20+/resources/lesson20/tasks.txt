                        Comparable

1. Создать класс Student cо строковым полем name. Создать 6 объектов (2 с одинаковым именем).
Отсортировать по Имени в алфавитном порядке.
2. Отсортировать в обратном порядке относительно алфавита
3. Новый класс Person = Добавить поле surname (фамилия) в класс Student .Создать 6 объектов (2 с одинаковым именеми фамилией).
Отсортировать в следующем порядке :
- сперва по фамилии в алфавитном , если равны - по имени в  обратном порядке относительно алфавита
Пример вывода:
    Антонов Максим
    Антонов Артем
    Бекиров Бекир
    Януш Игорь
    Януш Артур

4. Новый класс Human = Добавить поле age (возраст) в класс Person. Создать 6 объектов (2 с одинаковым именеми фамилией и возрастом).
Отсортировать в следующем порядке :
- сперва по возрасту от большего к меньшему, если равны
- по длине фамилии от большей к меньшей
- по имени в алфовитном порядке игнорирую регистр символов

                    Comparator
Добавить в класс Human Boolean поле hasHigherEducation (может быть null - "незаполнено")
5. Написать компаратор HumanAgeComparator - сравнивающий объкты класса Human - по возрасту от меньшего к большему
6. Написать HumanSurnameComparator - сравнивающий объкты класса Human - по длине фамилии от большей к меньшей,
если равны - в алфавитном порядке
7. Написать HumanNameComparator - сравнивающий по длине имени от большего к меньшему, если равны - по кол-ву уникальных
символов в имени от болтшего числа к меньшему
8. Написать HumanHasHigherEducation - сравнивающий по наличию образования в порядке - есть, не известно, нет

thenComparing()
reversed
nullsLast

                                Equals и Hashcode

9 Создать класс Car.
Поля firm, model, enginePower, enum - equipment - тип (base+, economy, premium)


                                Внутренний класс (нельзя статики)
Велосипед(Bicycle) - model weight + методы = дать полную характеристику
Руль(SteeringWheel) - цвет, материал ручек + методы = вправо, влево
Сиденье(Seat) - цвет дефолтная высота + методы = поднять на , опустить на

                                Вложенныее классы и оптимизация
