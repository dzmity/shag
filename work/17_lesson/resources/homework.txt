Задача на приоритетная очередь

Создать класс Milk, представляющий из себя продукт "Молоко" в магазине
Поля:
- название
- бренд (enum)
- тип тары (пакет, тетрапак, бутылка) (enum)
- объем (Double)
- цена (Double)
- срок годности (LocalDate)

Методы:
- конструктор по умолчанию
- геттеры / сеттеры
- toString()
- equals() & hashCode();

Создать класс "Продуктовая полка", на которой стоит молоко
Поля:
- Queue<Milk> products;
Методы:
- конструктор со всеми полями
- геттеры
- toString()

Создать класс "Умный продавец",
Поля:
- Имя
- полка1
- полка2
Методы:
- конструктор по умолчанию
- геттеры / сеттеры
- toString()
- addToShell(Milk milk), добавляющий молоко на ту полку, на которой находится меньше молока (в штуках)
- getFromShell(), берущий молоко с наименьшим оставшимся сроком годности (из той полки, на которой это молоко находится)
если на обоих полках есть молоко с наименьшим сроом годности , взять с любой из них (использовать Random)
Подсказка - вам нужно реализовать интерфейс Comparable и его метод compareTo() для класса Milk таким образом,
чтобы полка реализовывала приоритетную очередь, с сортировкой по дате.

В классе Runner в методе main() создать 12 объектов класса Milk
(из них 3 абсолютно одинаковых)
Создать коллекцию , хранящую Milk объекты. Добавить все вышесозданные объекты в эту коллекцию.
В ней должны остаться только уникальные. (Правильно выберите реализацию колллекции (List, Queue, Set))
Создайте класс MilkComparator, который отсортировывает молоко по стоимости за литр от наибольшего к наименьшему.
Создать еще одну коллекцию , хранящую Milk объекты. Добавить все элементы первой колллекции.
Вывести самым простым способом молоко из второй коллекции на экран в порядке стоимости за литр от наибольшего к наименьшему
(Правильно выберите реализацию колллекции Set)


https://docs.google.com/document/d/1qeyUJjwBrux6mO74jQNaAoTlIEgR_i4HeGlJg-Nbz0Q/edit