import java.util.ArrayList;

public class Lesson16 {

    public static void main(String[] args) {
        // Работа с коллекциями
        //  Создать список  покупок, необходимых сделать в магазине (каждый кол-вом = 1)
        //  Наполнить этот список по одному  5-7 товарами
        //  Вывести на экран кол-во этих покупок
        //  Сходить к соседу и спросить,  нужно ли ему что-то купить (получить список)
        //  Вывести на экран кол-во этих покупок
        //  Добавить покупки соседа в свой список покупок
        //  Вывести на экран кол-во этих покупок
        //  Идем в магазин
        //  Создать список того, что удалось купить в магазине
        //  Вывести на экран, пустой ли он пока
        //  Добавить в этот список те продукты, которые удалось купить
        //  Вывести на экран, пустой ли он теперь
        //  Вывести на экран, покупали ли мы только то, что собирались
        //  Стояли на кассе и купили жвачку. Добавили ее во второй список
        //  Проверяем, была ли жвачка в списке покупок
        //  Понимаем, что не собирались ее покупать и выкидываем из корзины
        //  Рассчитываемся на кассе. Вычеркиваем из первого списка все , что купили, чтобы понять, что еще осталось
        //  Выводим на экан кол-во товаров, которое не удалось купить в магазине
        //  Чистим второй список.
        // Выводим на экран, пустой ли он теперь
        //  Пробегаемся "глазами" по списку еще раз и выводим на экран кажжую покупкус новой строки
        //  Пробегаемся "глазами" по списку еще раз и удаляем ни так уж и нужное в списке
        // Превращаем список в массив


        // Поработаем с листом


        // Вставить в середину списка
        // Заменить 3-ий элемент
        // Вывести первый, третий, последний элемент
        // Удаляем 2
        // Выводим все продукты на экран
        // Удаляем 2
        // Выводим все элементы на экран
        // Вывести индекс конкретной покупки
        // Вывести последний индекс конкретной покупки

        // ArrayList и capacity
        // (N * 3) / 2 + 1, где N – текущее значение capacity.
        ArrayList<String> list = new ArrayList<>(10);
        //  Чистим список.
        // trimToSize()
        // ensureCapacity(N)


        // LinkedList - двухсвязный список ( List, Dequeue и Queue)
        // addLast(value)
        // addFirst(value)
        // removeLast() и removeFirst()
        // descendingIterator()

        // Поработаем с сетом
        // Разница с добавлением списком соседа

        // Поработаем с очередью


        // Поработаем с мапой
        //  Создать список  покупок, необходимых сделать в магазине (каждый кол-вом >= 1)
        // Разница с добавлением списком соседа



//        Collections.copy() копирует одну коллекцию в другую;
//        Collections.sort() сортирует коллекцию;
//        Collections.max() возвращает максимальный элемент коллекции;
//        Collections.min() возвращает минимальный элемент коллекции;
//        Collections.reverse() обращает порядок элементов коллекции с конца в начало;
    }
}
